SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- gamma * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Campania<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Campania, path = "Campania.xlsx", col_names = TRUE)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_13$totale_attualmente_positivi[data_13$totale_attualmente_positivi>0]
Morti=data_13$deceduti
Guariti=data_13$dimessi_guariti
data_13$totale_attualmente_positivi[1]
Day=(max(which(data_13$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 1311580 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- gamma * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Abruzzo<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Abruzzo, path = "Abruzzo.xlsx", col_names = TRUE)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_13$totale_attualmente_positivi[data_13$totale_attualmente_positivi>0]
Morti=data_13$deceduti
Guariti=data_13$dimessi_guariti
data_13$totale_attualmente_positivi[1]
Day=(max(which(data_13$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 1311580 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- gamma * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Abruzzo<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Abruzzo, path = "Abruzzo.xlsx", col_names = TRUE)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_16$totale_attualmente_positivi[data_16$totale_attualmente_positivi>0]
Morti=data_16$deceduti
Guariti=data_16$dimessi_guariti
data_16$totale_attualmente_positivi[1]
Day=(max(which(data_16$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 4029053 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- gamma * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Puglia<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Puglia, path = "Puglia.xlsx", col_names = TRUE)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_16$totale_attualmente_positivi[data_16$totale_attualmente_positivi>0]
Morti=data_16$deceduti
Guariti=data_16$dimessi_guariti
data_16$totale_attualmente_positivi[1]
Day=(max(which(data_16$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 4029053 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Puglia<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Puglia, path = "Puglia.xlsx", col_names = TRUE)
View(Puglia)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_17$totale_attualmente_positivi[data_17$totale_attualmente_positivi>0]
Morti=data_17$deceduti
Guariti=data_17$dimessi_guariti
data_17$totale_attualmente_positivi[1]
Day=(max(which(data_17$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 562869 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Basilicata<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Basilicata, path = "Basilicata.xlsx", col_names = TRUE)
Morti=Morti[4:35]
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_17$totale_attualmente_positivi[data_17$totale_attualmente_positivi>0]
Morti=data_17$deceduti
Morti
Morti=Morti[8:35]
Morti=Morti[9:35]
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_17$totale_attualmente_positivi[data_17$totale_attualmente_positivi>0]
Morti=data_17$deceduti
Guariti=data_17$dimessi_guariti
Morti=Morti[9:35]
Guariti=Guaritii[9:35]
data_17$totale_attualmente_positivi[1]
Day=(max(which(data_17$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 562869 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Calabria<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
View(Puglia)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_17$totale_attualmente_positivi[data_17$totale_attualmente_positivi>0]
Morti=data_17$deceduti
Guariti=data_17$dimessi_guariti
Morti=Morti[9:35]
Guariti=Guariti[9:35]
data_17$totale_attualmente_positivi[1]
Day=(max(which(data_17$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 562869 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Calabria<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
View(Calabria)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_17$totale_attualmente_positivi[data_17$totale_attualmente_positivi>0]
Morti=data_17$deceduti
Guariti=data_17$dimessi_guariti
data_17$totale_attualmente_positivi[1]
Day=(max(which(data_17$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 562869 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Calabria<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Calabria, path = "Calabria.xlsx", col_names = TRU
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_17$totale_attualmente_positivi[data_17$totale_attualmente_positivi>0]
Morti=data_17$deceduti
Guariti=data_17$dimessi_guariti
data_17$totale_attualmente_positivi[1]
Day=(max(which(data_17$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 562869 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Calabria<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Calabria, path = "Calabria.xlsx", col_names = TRUE)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_18$totale_attualmente_positivi[data_18$totale_attualmente_positivi>0]
Morti=data_18$deceduti
Guariti=data_18$dimessi_guariti
data_18$totale_attualmente_positivi[1]
Day=(max(which(data_18$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 1947131 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Calabria<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Calabria, path = "Calabria.xlsx", col_names = TRUE)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_19$totale_attualmente_positivi[data_19$totale_attualmente_positivi>0]
Morti=data_19$deceduti
Guariti=data_19$dimessi_guariti
data_19$totale_attualmente_positivi[1]
Day=(max(which(data_19$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 4999891 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Sicilia<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Sicilia, path = "Sicilia.xlsx", col_names = TRUE)
library(earlyR)
library(dplyr)
library(ggplot2)
library(deSolve)
library(writexl)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv")
for (prov in data$codice_regione) {
assign(paste("data_",prov,sep=""),data[data$codice_regione==prov,])
}
Infected <- data_20$totale_attualmente_positivi[data_20$totale_attualmente_positivi>0]
Morti=data_20$deceduti
Guariti=data_20$dimessi_guariti
data_20$totale_attualmente_positivi[1]
Day=(max(which(data_20$totale_attualmente_positivi==0))+1):(length(Infected))
N <- 1639591 # population of regione
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -beta/N * I * S
dI <- beta/N * I * S - gamma * I - alfa * I
dM <- gamma * I
dG <- alfa * I
list(c(dS, dI, dM, dG))
})
}
init <- c(S = N-Infected[1], I = Infected[1], M=Morti[1], G=Guariti[1])
RSS <- function(parameters) {
names(parameters) <- c("beta", "gamma", "alfa")
out <- ode(y = init, times = Day, func = SIR, parms = parameters)
fit <- out[ , 3]
sum((Infected - fit)^2)
}
Opt <- optim(c(0.5, 0.5, 0.5), RSS, method = "L-BFGS-B", lower = c(0, 0, 0), upper = c(1, 1, 1))
Opt$message
Opt_par <- setNames(Opt$par, c("beta", "gamma","alfa"))
Opt_par
t <- 1:100
Sardegna<- data.frame(ode(y = init, times = t, func = SIR, parms = Opt_par))
write_xlsx(Sardegna, path = "Sardegna.xlsx", col_names = TRUE)
